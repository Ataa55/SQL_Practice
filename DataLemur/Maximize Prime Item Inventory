Amazon wants to maximize the storage capacity of its 500,000 square feet warehouse by prioritizing the stocking of prime items and maintaining an equal distribution across all category types. After prioritizing prime items, any remaining square footage will be utilized to stock non-prime items while still ensuring an equal balance among all category types.

Write a query to find the maximum number of prime and non-prime items that can be stored in the 500,000 square feet warehouse based on the following criteria:

Prioritize stocking prime items.
Maintain an equal distribution of items across all category types.
After accommodating prime items, allocate any remaining space to non-prime items while ensuring an equal balance among all category types.
Output the item type with prime_eligible followed by not_prime and the maximum number of items that can be stocked.

Assumptions:

Prime and non-prime items have to be stored in equal amounts, regardless of their size or square footage. This implies that prime items will be stored separately from non-prime items in their respective containers, but within each container, all items must be in the same amount.
Non-prime items must always be available in stock to meet customer demand, so the non-prime item count should never be zero.
Item count should be whole numbers (integers).

*********************************************************************************************************
1 - calculate count of each item type and the total sum of it's area
2 - calc the total area that all prime types will take
3 - calc the remaining area then calc what this area will take from the not prime item types
*********************************************************************************************************
with cte as (
select item_type, 
       sum(square_footage) as total_foot, 
       count(item_type) as item_count
from inventory 
GROUP BY (item_type))
, prime_item as (
select 
  item_type,
  total_foot,  
  floor(500000/ total_foot) * item_count as item_count
from cte
where item_type = 'prime_eligible')

select 
  item_type, 
  case
    when item_type = 'prime_eligible'
      then (floor(500000/ total_foot) * item_count)
    when item_type = 'not_prime'
      then floor((500000 - (select floor(500000/total_foot) * total_foot from prime_item)) / total_foot) * item_count
      
  end as item_count
  from cte
  order by item_type desc;











